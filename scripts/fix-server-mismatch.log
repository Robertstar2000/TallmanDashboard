**********************
Windows PowerShell transcript start
Start time: 20250325001424
Username: TALLMAN\BobM
RunAs User: TALLMAN\BobM
Configuration Name: 
Machine: WEB03 (Microsoft Windows NT 10.0.20348.0)
Host Application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -File C:\Users\BobM\CascadeProjects\TallmanDashboard_new\scripts\fix-server-mismatch-v2.ps1
Process ID: 20448
PSVersion: 5.1.20348.2849
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.20348.2849
BuildVersion: 10.0.20348.2849
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is C:\Users\BobM\CascadeProjects\TallmanDashboard_new\scripts\fix-server-mismatch.log
Starting server name mismatch fix at 03/25/2025 00:14:24
Created backup at C:\Users\BobM\CascadeProjects\TallmanDashboard_new\lib\db\complete-chart-data.ts.bak
Fixing ID 6 - Accounts Payable Jan (POR entry with P21 SQL syntax)
Fixing ID 7 - Accounts Payable Feb (POR entry with P21 SQL syntax)
Fixing ID 8 - Accounts Payable Mar (POR entry with P21 SQL syntax)
Fixing ID 9 - Accounts Payable Apr (POR entry with P21 SQL syntax)
Fixing ID 10 - Accounts Payable May (POR entry with P21 SQL syntax)
Fixing ID 11 - Accounts Payable Jun (POR entry with P21 SQL syntax)
Fixing ID 12 - Accounts Payable Jul (POR entry with P21 SQL syntax)
Fixing ID 13 - Accounts Payable Aug (POR entry with P21 SQL syntax)
Fixing ID 14 - Accounts Payable Sep (POR entry with P21 SQL syntax)
Fixing ID 15 - Accounts Payable Oct (POR entry with P21 SQL syntax)
Fixing ID 16 - Accounts Payable Nov (POR entry with P21 SQL syntax)
Fixing ID 17 - Accounts Payable Dec (POR entry with P21 SQL syntax)
Fixing ID 18 - Accounts Receivable Jan (POR entry with P21 SQL syntax)
Fixing ID 19 - Accounts Receivable Feb (POR entry with P21 SQL syntax)
Fixing ID 20 - Accounts Receivable Mar (POR entry with P21 SQL syntax)
Fixing ID 21 - Accounts Receivable Apr (POR entry with P21 SQL syntax)
Fixing ID 22 - Accounts Receivable May (POR entry with P21 SQL syntax)
Fixing ID 23 - Accounts Receivable Jun (POR entry with P21 SQL syntax)
Fixing ID 24 - Accounts Receivable Jul (POR entry with P21 SQL syntax)
Fixing ID 25 - Accounts Receivable Aug (POR entry with P21 SQL syntax)
Fixing ID 26 - Accounts Receivable Sep (POR entry with P21 SQL syntax)
Fixing ID 27 - Accounts Receivable Oct (POR entry with P21 SQL syntax)
Fixing ID 28 - Accounts Receivable Nov (POR entry with P21 SQL syntax)
Fixing ID 29 - Accounts Receivable Dec (POR entry with P21 SQL syntax)
Fixing ID 30 - Accounts Overdue Jan (POR entry with P21 SQL syntax)
Fixing ID 31 - Accounts Overdue Feb (POR entry with P21 SQL syntax)
Fixing ID 32 - Accounts Overdue Mar (POR entry with P21 SQL syntax)
Fixing ID 33 - Accounts Overdue Apr (POR entry with P21 SQL syntax)
Fixing ID 34 - Accounts Overdue May (POR entry with P21 SQL syntax)
Fixing ID 35 - Accounts Overdue Jun (POR entry with P21 SQL syntax)
Fixing ID 36 - Accounts Overdue Jul (POR entry with P21 SQL syntax)
Fixing ID 37 - Accounts Overdue Aug (POR entry with P21 SQL syntax)
Fixing ID 38 - Accounts Overdue Sep (POR entry with P21 SQL syntax)
Fixing ID 39 - Accounts Overdue Oct (POR entry with P21 SQL syntax)
Fixing ID 40 - Accounts Overdue Nov (POR entry with P21 SQL syntax)
Fixing ID 41 - Accounts Overdue Dec (POR entry with P21 SQL syntax)
Fixing ID 42 - Customer Metrics New Jan (POR entry with P21 SQL syntax)
Fixing ID 43 - Customer Metrics New Feb (POR entry with P21 SQL syntax)
Fixing ID 44 - Customer Metrics New Mar (POR entry with P21 SQL syntax)
Fixing ID 45 - Customer Metrics New Apr (POR entry with P21 SQL syntax)
Fixing ID 46 - Customer Metrics New May (POR entry with P21 SQL syntax)
Fixing ID 47 - Customer Metrics New Jun (POR entry with P21 SQL syntax)
Fixing ID 48 - Customer Metrics New Jul (POR entry with P21 SQL syntax)
Fixing ID 49 - Customer Metrics New Aug (POR entry with P21 SQL syntax)
Fixing ID 50 - Customer Metrics New Sep (POR entry with P21 SQL syntax)
Fixing ID 51 - Customer Metrics New Oct (POR entry with P21 SQL syntax)
Fixing ID 52 - Customer Metrics New Nov (POR entry with P21 SQL syntax)
Fixing ID 53 - Customer Metrics New Dec (POR entry with P21 SQL syntax)
Fixing ID 54 - Customer Metrics Prospects Jan (POR entry with P21 SQL syntax)
Fixing ID 55 - Customer Metrics Prospects Feb (POR entry with P21 SQL syntax)
Fixing ID 56 - Customer Metrics Prospects Mar (POR entry with P21 SQL syntax)
Fixing ID 57 - Customer Metrics Prospects Apr (POR entry with P21 SQL syntax)
Fixing ID 58 - Customer Metrics Prospects May (POR entry with P21 SQL syntax)
Fixing ID 59 - Customer Metrics Prospects Jun (POR entry with P21 SQL syntax)
Fixing ID 60 - Customer Metrics Prospects Jul (POR entry with P21 SQL syntax)
Fixing ID 61 - Customer Metrics Prospects Aug (POR entry with P21 SQL syntax)
Fixing ID 62 - Customer Metrics Prospects Sep (POR entry with P21 SQL syntax)
Fixing ID 63 - Customer Metrics Prospects Oct (POR entry with P21 SQL syntax)
Fixing ID 64 - Customer Metrics Prospects Nov (POR entry with P21 SQL syntax)
Fixing ID 65 - Customer Metrics Prospects Dec (POR entry with P21 SQL syntax)
Fixing ID 109 - Inventory In Stock Dept 100 (POR entry with P21 SQL syntax)
Fixing ID 110 - Inventory In Stock Dept 101 (POR entry with P21 SQL syntax)
Fixing ID 111 - Inventory In Stock Dept 102 (POR entry with P21 SQL syntax)
Fixing ID 112 - Inventory In Stock Dept 207 (POR entry with P21 SQL syntax)
Fixing ID 113 - Inventory On Order Dept 100 (POR entry with P21 SQL syntax)
Fixing ID 114 - Inventory On Order Dept 101 (POR entry with P21 SQL syntax)
Fixing ID 115 - Inventory On Order Dept 102 (POR entry with P21 SQL syntax)
Fixing ID 116 - Inventory On Order Dept 207 (POR entry with P21 SQL syntax)

Summary of changes:
Fixed 68 entries with mismatched server names and SQL syntax

Details of fixed entries:
ID: 6
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Payable' AND Month(TransactionDate) = Payable AND Year(TransactionDate) = Year(Date())

ID: 7
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Payable' AND Month(TransactionDate) = Payable AND Year(TransactionDate) = Year(Date())

ID: 8
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Payable' AND Month(TransactionDate) = Payable AND Year(TransactionDate) = Year(Date())

ID: 9
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Payable' AND Month(TransactionDate) = Payable AND Year(TransactionDate) = Year(Date())

ID: 10
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Payable' AND Month(TransactionDate) = Payable AND Year(TransactionDate) = Year(Date())

ID: 11
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Payable' AND Month(TransactionDate) = Payable AND Year(TransactionDate) = Year(Date())

ID: 12
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Payable' AND Month(TransactionDate) = Payable AND Year(TransactionDate) = Year(Date())

ID: 13
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Payable' AND Month(TransactionDate) = Payable AND Year(TransactionDate) = Year(Date())

ID: 14
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Payable' AND Month(TransactionDate) = Payable AND Year(TransactionDate) = Year(Date())

ID: 15
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Payable' AND Month(TransactionDate) = Payable AND Year(TransactionDate) = Year(Date())

ID: 16
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Payable' AND Month(TransactionDate) = Payable AND Year(TransactionDate) = Year(Date())

ID: 17
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Payable' AND Month(TransactionDate) = Payable AND Year(TransactionDate) = Year(Date())

ID: 18
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Receivable' AND Month(TransactionDate) = Receivable AND Year(TransactionDate) = Year(Date())

ID: 19
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Receivable' AND Month(TransactionDate) = Receivable AND Year(TransactionDate) = Year(Date())

ID: 20
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Receivable' AND Month(TransactionDate) = Receivable AND Year(TransactionDate) = Year(Date())

ID: 21
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Receivable' AND Month(TransactionDate) = Receivable AND Year(TransactionDate) = Year(Date())

ID: 22
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Receivable' AND Month(TransactionDate) = Receivable AND Year(TransactionDate) = Year(Date())

ID: 23
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Receivable' AND Month(TransactionDate) = Receivable AND Year(TransactionDate) = Year(Date())

ID: 24
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Receivable' AND Month(TransactionDate) = Receivable AND Year(TransactionDate) = Year(Date())

ID: 25
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Receivable' AND Month(TransactionDate) = Receivable AND Year(TransactionDate) = Year(Date())

ID: 26
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Receivable' AND Month(TransactionDate) = Receivable AND Year(TransactionDate) = Year(Date())

ID: 27
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Receivable' AND Month(TransactionDate) = Receivable AND Year(TransactionDate) = Year(Date())

ID: 28
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Receivable' AND Month(TransactionDate) = Receivable AND Year(TransactionDate) = Year(Date())

ID: 29
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Receivable' AND Month(TransactionDate) = Receivable AND Year(TransactionDate) = Year(Date())

ID: 30
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Overdue' AND Month(TransactionDate) = Overdue AND Year(TransactionDate) = Year(Date())

ID: 31
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Overdue' AND Month(TransactionDate) = Overdue AND Year(TransactionDate) = Year(Date())

ID: 32
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Overdue' AND Month(TransactionDate) = Overdue AND Year(TransactionDate) = Year(Date())

ID: 33
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Overdue' AND Month(TransactionDate) = Overdue AND Year(TransactionDate) = Year(Date())

ID: 34
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Overdue' AND Month(TransactionDate) = Overdue AND Year(TransactionDate) = Year(Date())

ID: 35
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Overdue' AND Month(TransactionDate) = Overdue AND Year(TransactionDate) = Year(Date())

ID: 36
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Overdue' AND Month(TransactionDate) = Overdue AND Year(TransactionDate) = Year(Date())

ID: 37
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Overdue' AND Month(TransactionDate) = Overdue AND Year(TransactionDate) = Year(Date())

ID: 38
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Overdue' AND Month(TransactionDate) = Overdue AND Year(TransactionDate) = Year(Date())

ID: 39
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Overdue' AND Month(TransactionDate) = Overdue AND Year(TransactionDate) = Year(Date())

ID: 40
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Overdue' AND Month(TransactionDate) = Overdue AND Year(TransactionDate) = Year(Date())

ID: 41
  Old Table: dbo.APINV WITH (NOLOCK)
  New Table: Transactions
  Old SQL: SELECT SUM(AP_AMOUNT) as value FROM dbo.APINV WITH (NOLOCK) WHERE AP_DATE <= GETDATE()
  New SQL: SELECT Sum(Amount) as value FROM Transactions WHERE TransactionType = 'Overdue' AND Month(TransactionDate) = Overdue AND Year(TransactionDate) = Year(Date())

ID: 42
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'New' AND Month(CreatedDate) = New AND Year(CreatedDate) = Year(Date())

ID: 43
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'New' AND Month(CreatedDate) = New AND Year(CreatedDate) = Year(Date())

ID: 44
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'New' AND Month(CreatedDate) = New AND Year(CreatedDate) = Year(Date())

ID: 45
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'New' AND Month(CreatedDate) = New AND Year(CreatedDate) = Year(Date())

ID: 46
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'New' AND Month(CreatedDate) = New AND Year(CreatedDate) = Year(Date())

ID: 47
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'New' AND Month(CreatedDate) = New AND Year(CreatedDate) = Year(Date())

ID: 48
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'New' AND Month(CreatedDate) = New AND Year(CreatedDate) = Year(Date())

ID: 49
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'New' AND Month(CreatedDate) = New AND Year(CreatedDate) = Year(Date())

ID: 50
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'New' AND Month(CreatedDate) = New AND Year(CreatedDate) = Year(Date())

ID: 51
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'New' AND Month(CreatedDate) = New AND Year(CreatedDate) = Year(Date())

ID: 52
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'New' AND Month(CreatedDate) = New AND Year(CreatedDate) = Year(Date())

ID: 53
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'New' AND Month(CreatedDate) = New AND Year(CreatedDate) = Year(Date())

ID: 54
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'Prospects' AND Month(CreatedDate) = Prospects AND Year(CreatedDate) = Year(Date())

ID: 55
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'Prospects' AND Month(CreatedDate) = Prospects AND Year(CreatedDate) = Year(Date())

ID: 56
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'Prospects' AND Month(CreatedDate) = Prospects AND Year(CreatedDate) = Year(Date())

ID: 57
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'Prospects' AND Month(CreatedDate) = Prospects AND Year(CreatedDate) = Year(Date())

ID: 58
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'Prospects' AND Month(CreatedDate) = Prospects AND Year(CreatedDate) = Year(Date())

ID: 59
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'Prospects' AND Month(CreatedDate) = Prospects AND Year(CreatedDate) = Year(Date())

ID: 60
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'Prospects' AND Month(CreatedDate) = Prospects AND Year(CreatedDate) = Year(Date())

ID: 61
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'Prospects' AND Month(CreatedDate) = Prospects AND Year(CreatedDate) = Year(Date())

ID: 62
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'Prospects' AND Month(CreatedDate) = Prospects AND Year(CreatedDate) = Year(Date())

ID: 63
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'Prospects' AND Month(CreatedDate) = Prospects AND Year(CreatedDate) = Year(Date())

ID: 64
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'Prospects' AND Month(CreatedDate) = Prospects AND Year(CreatedDate) = Year(Date())

ID: 65
  Old Table: dbo.SOMAST WITH (NOLOCK)
  New Table: Customers
  Old SQL: SELECT COUNT(DISTINCT so.CustID) as value FROM dbo.SOMAST so WITH (NOLOCK) WHERE so.SO_DATE <= GETDATE() AND so.CustID NOT IN (SELECT DISTINCT so_prev.CustID FROM dbo.SOMAST so_prev WITH (NOLOCK) WHERE so_prev.SO_DATE BETWEEN DATEADD(MONTH, -12, GETDATE()) AND DATEADD(DAY, -1, GETDATE()))
  New SQL: SELECT Count(*) as value FROM Customers WHERE Status = 'Prospects' AND Month(CreatedDate) = Prospects AND Year(CreatedDate) = Year(Date())

ID: 109
  Old Table: dbo.ICINV WITH (NOLOCK)
  New Table: Inventory
  Old SQL: SELECT SUM(ONHandQty) as value FROM dbo.ICINV WITH (NOLOCK) WHERE INV_DATE <= GETDATE()
  New SQL: SELECT Count(*) as value FROM Inventory WHERE Department = 'In Stock'

ID: 110
  Old Table: dbo.ICINV WITH (NOLOCK)
  New Table: Inventory
  Old SQL: SELECT SUM(ONHandQty) as value FROM dbo.ICINV WITH (NOLOCK) WHERE INV_DATE <= GETDATE()
  New SQL: SELECT Count(*) as value FROM Inventory WHERE Department = 'In Stock'

ID: 111
  Old Table: dbo.ICINV WITH (NOLOCK)
  New Table: Inventory
  Old SQL: SELECT SUM(ONHandQty) as value FROM dbo.ICINV WITH (NOLOCK) WHERE INV_DATE <= GETDATE()
  New SQL: SELECT Count(*) as value FROM Inventory WHERE Department = 'In Stock'

ID: 112
  Old Table: dbo.ICINV WITH (NOLOCK)
  New Table: Inventory
  Old SQL: SELECT SUM(ONHandQty) as value FROM dbo.ICINV WITH (NOLOCK) WHERE INV_DATE <= GETDATE()
  New SQL: SELECT Count(*) as value FROM Inventory WHERE Department = 'In Stock'

ID: 113
  Old Table: dbo.ICINV WITH (NOLOCK)
  New Table: Inventory
  Old SQL: SELECT SUM(ONHandQty) as value FROM dbo.ICINV WITH (NOLOCK) WHERE INV_DATE <= GETDATE()
  New SQL: SELECT Count(*) as value FROM Inventory WHERE Department = 'On Order'

ID: 114
  Old Table: dbo.ICINV WITH (NOLOCK)
  New Table: Inventory
  Old SQL: SELECT SUM(ONHandQty) as value FROM dbo.ICINV WITH (NOLOCK) WHERE INV_DATE <= GETDATE()
  New SQL: SELECT Count(*) as value FROM Inventory WHERE Department = 'On Order'

ID: 115
  Old Table: dbo.ICINV WITH (NOLOCK)
  New Table: Inventory
  Old SQL: SELECT SUM(ONHandQty) as value FROM dbo.ICINV WITH (NOLOCK) WHERE INV_DATE <= GETDATE()
  New SQL: SELECT Count(*) as value FROM Inventory WHERE Department = 'On Order'

ID: 116
  Old Table: dbo.ICINV WITH (NOLOCK)
  New Table: Inventory
  Old SQL: SELECT SUM(ONHandQty) as value FROM dbo.ICINV WITH (NOLOCK) WHERE INV_DATE <= GETDATE()
  New SQL: SELECT Count(*) as value FROM Inventory WHERE Department = 'On Order'

Server name mismatch fix completed at 03/25/2025 00:14:24
**********************
Windows PowerShell transcript end
End time: 20250325001424
**********************
