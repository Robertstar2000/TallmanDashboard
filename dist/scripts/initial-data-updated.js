// This file was auto-generated by the saveChartDataToInitFile function
// Last updated: 2025-03-21T13:26:30.179Z
// Chart data from the admin spreadsheet
export const initialSpreadsheetData = [
    {
        id: '1',
        name: "Key Metrics - Total Orders",
        chartName: "Key Metrics",
        variableName: "Total Orders",
        serverName: 'P21',
        value: "12847",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE created_at > DATE_SUB(NOW(), INTERVAL 7 DAY)`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE order_date > DATEADD(day, -7, GETDATE())`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '2',
        name: "Key Metrics - Open Orders",
        chartName: "Key Metrics",
        variableName: "Open Orders",
        serverName: 'P21',
        value: "1563",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE status = 'open'`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE completed = 'N'`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '3',
        name: "Key Metrics - Open Orders 2",
        chartName: "Key Metrics",
        variableName: "Open Orders 2",
        serverName: 'P21',
        value: "892",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE status = 'open' AND created_at < DATE_SUB(NOW(), INTERVAL 30 DAY)`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE completed = 'N' AND order_date < DATEADD(day, -30, GETDATE())`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '4',
        name: "Key Metrics - Daily Revenue",
        chartName: "Key Metrics",
        variableName: "Daily Revenue",
        serverName: 'P21',
        value: "1924500",
        chartGroup: "Metrics",
        calculation: "SUM(total)",
        sqlExpression: `SELECT SUM(total) as value FROM orders WHERE status = 'shipped' AND shipped_at > DATE_SUB(NOW(), INTERVAL 1 DAY)`,
        sqlExpression: `SELECT ISNULL(SUM(l.extended_price), 0) as value FROM dbo.oe_hdr h WITH (NOLOCK) JOIN dbo.oe_line l WITH (NOLOCK) ON h.order_no = l.order_no WHERE h.completed = 'Y' AND h.order_date > DATEADD(day, -1, GETDATE())`,
        tableName: "oe_hdr, oe_line",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '5',
        name: "Key Metrics - Open Invoices",
        chartName: "Key Metrics",
        variableName: "Open Invoices",
        serverName: 'P21',
        value: "3842650",
        chartGroup: "Metrics",
        calculation: "SUM(total)",
        sqlExpression: `SELECT SUM(total) as value FROM invoices WHERE status = 'open' AND created_at > DATE_SUB(NOW(), INTERVAL 30 DAY)`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE GETDATE() <= due_date AND due_date <= DATEADD(month, 1, GETDATE())`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '6',
        name: "Key Metrics - Orders Backlogged",
        chartName: "Key Metrics",
        variableName: "Orders Backlogged",
        serverName: 'P21',
        value: "743",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE status IN ('hold', 'backlogged') AND created_at > DATE_SUB(NOW(), INTERVAL 30 DAY)`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE hold_flag = 'Y' AND order_date > DATEADD(day, -30, GETDATE())`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '7',
        name: "Key Metrics - Total Sales Monthly",
        chartName: "Key Metrics",
        variableName: "Total Sales Monthly",
        serverName: 'P21',
        value: "8325000",
        chartGroup: "Metrics",
        calculation: "SUM(total)",
        sqlExpression: `SELECT SUM(total) as value FROM orders WHERE created_at > DATE_SUB(NOW(), INTERVAL 30 DAY)`,
        sqlExpression: `SELECT ISNULL(SUM(l.extended_price), 0) as value FROM dbo.oe_hdr h WITH (NOLOCK) JOIN dbo.oe_line l WITH (NOLOCK) ON h.order_no = l.order_no WHERE h.order_date > DATEADD(day, -30, GETDATE())`,
        tableName: "oe_hdr, oe_line",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '8',
        name: "Accounts - Payable",
        chartName: "Accounts",
        variableName: "Payable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'payable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 0, GETDATE()) > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '9',
        name: "Accounts - Payable",
        chartName: "Accounts",
        variableName: "Payable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'payable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 1, GETDATE()) > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '10',
        name: "Accounts - Payable",
        chartName: "Accounts",
        variableName: "Payable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'payable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 2, GETDATE()) > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '11',
        name: "Accounts - Payable",
        chartName: "Accounts",
        variableName: "Payable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'payable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 3, GETDATE()) > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '12',
        name: "Accounts - Payable",
        chartName: "Accounts",
        variableName: "Payable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'payable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 4, GETDATE()) > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '13',
        name: "Accounts - Payable",
        chartName: "Accounts",
        variableName: "Payable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'payable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 5, GETDATE()) > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '14',
        name: "Accounts - Payable",
        chartName: "Accounts",
        variableName: "Payable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'payable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 6, GETDATE()) > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '15',
        name: "Accounts - Payable",
        chartName: "Accounts",
        variableName: "Payable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'payable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 7, GETDATE()) > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '16',
        name: "Accounts - Payable",
        chartName: "Accounts",
        variableName: "Payable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'payable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 8, GETDATE()) > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '17',
        name: "Accounts - Payable",
        chartName: "Accounts",
        variableName: "Payable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'payable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 9, GETDATE()) > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '18',
        name: "Accounts - Payable",
        chartName: "Accounts",
        variableName: "Payable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'payable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 10, GETDATE()) > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '19',
        name: "Accounts - Payable",
        chartName: "Accounts",
        variableName: "Payable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'payable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 11, GETDATE()) > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '20',
        name: "Accounts - Overdue",
        chartName: "Accounts",
        variableName: "Overdue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'overdue'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 0, GETDATE()) > due_date AND GETDATE() > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '21',
        name: "Accounts - Overdue",
        chartName: "Accounts",
        variableName: "Overdue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'overdue'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 1, GETDATE()) > due_date AND GETDATE() > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '22',
        name: "Accounts - Overdue",
        chartName: "Accounts",
        variableName: "Overdue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'overdue'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 2, GETDATE()) > due_date AND GETDATE() > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '23',
        name: "Accounts - Overdue",
        chartName: "Accounts",
        variableName: "Overdue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'overdue'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 3, GETDATE()) > due_date AND GETDATE() > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '24',
        name: "Accounts - Overdue",
        chartName: "Accounts",
        variableName: "Overdue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'overdue'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 4, GETDATE()) > due_date AND GETDATE() > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '25',
        name: "Accounts - Overdue",
        chartName: "Accounts",
        variableName: "Overdue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'overdue'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 5, GETDATE()) > due_date AND GETDATE() > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '26',
        name: "Accounts - Overdue",
        chartName: "Accounts",
        variableName: "Overdue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'overdue'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 6, GETDATE()) > due_date AND GETDATE() > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '27',
        name: "Accounts - Overdue",
        chartName: "Accounts",
        variableName: "Overdue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'overdue'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 7, GETDATE()) > due_date AND GETDATE() > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '28',
        name: "Accounts - Overdue",
        chartName: "Accounts",
        variableName: "Overdue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'overdue'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 8, GETDATE()) > due_date AND GETDATE() > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '29',
        name: "Accounts - Overdue",
        chartName: "Accounts",
        variableName: "Overdue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'overdue'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 9, GETDATE()) > due_date AND GETDATE() > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '30',
        name: "Accounts - Overdue",
        chartName: "Accounts",
        variableName: "Overdue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'overdue'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 10, GETDATE()) > due_date AND GETDATE() > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '31',
        name: "Accounts - Overdue",
        chartName: "Accounts",
        variableName: "Overdue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'overdue'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ap_open_items WITH (NOLOCK) WHERE DATEADD(month, 11, GETDATE()) > due_date AND GETDATE() > due_date`,
        tableName: "ap_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '32',
        name: "Accounts - Receivable",
        chartName: "Accounts",
        variableName: "Receivable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'receivable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE DATEADD(month, 0, GETDATE()) > due_date`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '33',
        name: "Accounts - Receivable",
        chartName: "Accounts",
        variableName: "Receivable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'receivable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE DATEADD(month, 1, GETDATE()) > due_date`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '34',
        name: "Accounts - Receivable",
        chartName: "Accounts",
        variableName: "Receivable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'receivable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE DATEADD(month, 2, GETDATE()) > due_date`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '35',
        name: "Accounts - Receivable",
        chartName: "Accounts",
        variableName: "Receivable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'receivable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE DATEADD(month, 3, GETDATE()) > due_date`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '36',
        name: "Accounts - Receivable",
        chartName: "Accounts",
        variableName: "Receivable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'receivable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE DATEADD(month, 4, GETDATE()) > due_date`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '37',
        name: "Accounts - Receivable",
        chartName: "Accounts",
        variableName: "Receivable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'receivable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE DATEADD(month, 5, GETDATE()) > due_date`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '38',
        name: "Accounts - Receivable",
        chartName: "Accounts",
        variableName: "Receivable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'receivable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE DATEADD(month, 6, GETDATE()) > due_date`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '39',
        name: "Accounts - Receivable",
        chartName: "Accounts",
        variableName: "Receivable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'receivable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE DATEADD(month, 7, GETDATE()) > due_date`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '40',
        name: "Accounts - Receivable",
        chartName: "Accounts",
        variableName: "Receivable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'receivable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE DATEADD(month, 8, GETDATE()) > due_date`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '41',
        name: "Accounts - Receivable",
        chartName: "Accounts",
        variableName: "Receivable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'receivable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE DATEADD(month, 9, GETDATE()) > due_date`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '42',
        name: "Accounts - Receivable",
        chartName: "Accounts",
        variableName: "Receivable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'receivable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE DATEADD(month, 10, GETDATE()) > due_date`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '43',
        name: "Accounts - Receivable",
        chartName: "Accounts",
        variableName: "Receivable",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT COALESCE(SUM(open_balance), 0) as value FROM accounts WHERE type = 'receivable'`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE DATEADD(month, 11, GETDATE()) > due_date`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '44',
        name: "Customer Metrics - New Customers",
        chartName: "Customer Metrics",
        variableName: "New Customers",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM customers WHERE created_at >= DATE_FORMAT(NOW(), '%Y-%m-01') AND created_at < DATE_ADD(DATE_FORMAT(NOW(), '%Y-%m-01'), INTERVAL 1 MONTH)`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.customer WITH (NOLOCK) WHERE YEAR(created_date) = YEAR(GETDATE()) AND MONTH(created_date) = MONTH(GETDATE())`,
        tableName: "customer",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '45',
        name: "Customer Metrics - New Customers",
        chartName: "Customer Metrics",
        variableName: "New Customers",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM customers WHERE created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(NOW(), '%Y-%m-01')`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.customer WITH (NOLOCK) WHERE YEAR(created_date) = YEAR(DATEADD(month, -1, GETDATE())) AND MONTH(created_date) = MONTH(DATEADD(month, -1, GETDATE()))`,
        tableName: "customer",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '46',
        name: "Customer Metrics - New Customers",
        chartName: "Customer Metrics",
        variableName: "New Customers",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM customers WHERE created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 2 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH), '%Y-%m-01')`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.customer WITH (NOLOCK) WHERE YEAR(created_date) = YEAR(DATEADD(month, -2, GETDATE())) AND MONTH(created_date) = MONTH(DATEADD(month, -2, GETDATE()))`,
        tableName: "customer",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '47',
        name: "Customer Metrics - New Customers",
        chartName: "Customer Metrics",
        variableName: "New Customers",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM customers WHERE created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 3 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 2 MONTH), '%Y-%m-01')`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.customer WITH (NOLOCK) WHERE YEAR(created_date) = YEAR(DATEADD(month, -3, GETDATE())) AND MONTH(created_date) = MONTH(DATEADD(month, -3, GETDATE()))`,
        tableName: "customer",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '48',
        name: "Customer Metrics - New Customers",
        chartName: "Customer Metrics",
        variableName: "New Customers",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM customers WHERE created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 4 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 3 MONTH), '%Y-%m-01')`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.customer WITH (NOLOCK) WHERE YEAR(created_date) = YEAR(DATEADD(month, -4, GETDATE())) AND MONTH(created_date) = MONTH(DATEADD(month, -4, GETDATE()))`,
        tableName: "customer",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '49',
        name: "Customer Metrics - New Customers",
        chartName: "Customer Metrics",
        variableName: "New Customers",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM customers WHERE created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 5 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 4 MONTH), '%Y-%m-01')`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.customer WITH (NOLOCK) WHERE YEAR(created_date) = YEAR(DATEADD(month, -5, GETDATE())) AND MONTH(created_date) = MONTH(DATEADD(month, -5, GETDATE()))`,
        tableName: "customer",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '50',
        name: "Customer Metrics - New Customers",
        chartName: "Customer Metrics",
        variableName: "New Customers",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM customers WHERE created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 6 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 5 MONTH), '%Y-%m-01')`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.customer WITH (NOLOCK) WHERE YEAR(created_date) = YEAR(DATEADD(month, -6, GETDATE())) AND MONTH(created_date) = MONTH(DATEADD(month, -6, GETDATE()))`,
        tableName: "customer",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '51',
        name: "Customer Metrics - New Customers",
        chartName: "Customer Metrics",
        variableName: "New Customers",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM customers WHERE created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 7 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 6 MONTH), '%Y-%m-01')`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.customer WITH (NOLOCK) WHERE YEAR(created_date) = YEAR(DATEADD(month, -7, GETDATE())) AND MONTH(created_date) = MONTH(DATEADD(month, -7, GETDATE()))`,
        tableName: "customer",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '52',
        name: "Customer Metrics - New Customers",
        chartName: "Customer Metrics",
        variableName: "New Customers",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM customers WHERE created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 8 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 7 MONTH), '%Y-%m-01')`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.customer WITH (NOLOCK) WHERE YEAR(created_date) = YEAR(DATEADD(month, -8, GETDATE())) AND MONTH(created_date) = MONTH(DATEADD(month, -8, GETDATE()))`,
        tableName: "customer",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '53',
        name: "Customer Metrics - New Customers",
        chartName: "Customer Metrics",
        variableName: "New Customers",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM customers WHERE created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 9 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 8 MONTH), '%Y-%m-01')`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.customer WITH (NOLOCK) WHERE YEAR(created_date) = YEAR(DATEADD(month, -9, GETDATE())) AND MONTH(created_date) = MONTH(DATEADD(month, -9, GETDATE()))`,
        tableName: "customer",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '54',
        name: "Customer Metrics - New Customers",
        chartName: "Customer Metrics",
        variableName: "New Customers",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM customers WHERE created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 10 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 9 MONTH), '%Y-%m-01')`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.customer WITH (NOLOCK) WHERE YEAR(created_date) = YEAR(DATEADD(month, -10, GETDATE())) AND MONTH(created_date) = MONTH(DATEADD(month, -10, GETDATE()))`,
        tableName: "customer",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '55',
        name: "Customer Metrics - New Customers",
        chartName: "Customer Metrics",
        variableName: "New Customers",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM customers WHERE created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 11 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 10 MONTH), '%Y-%m-01')`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.customer WITH (NOLOCK) WHERE YEAR(created_date) = YEAR(DATEADD(month, -11, GETDATE())) AND MONTH(created_date) = MONTH(DATEADD(month, -11, GETDATE()))`,
        tableName: "customer",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '68',
        name: "Site Distribution - Columbus Orders",
        chartName: "Site Distribution",
        variableName: "Columbus Orders",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE site = 'Columbus'`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE location_id = '101' AND completed = 'N'`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '69',
        name: "Site Distribution - Columbus Sales",
        chartName: "Site Distribution",
        variableName: "Columbus Sales",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(extended_price)",
        sqlExpression: `SELECT SUM(total) as value FROM orders WHERE site = 'Columbus' AND created_at >= DATE_SUB(NOW(), INTERVAL 30 DAY)`,
        sqlExpression: `SELECT ISNULL(SUM(l.extended_price), 0) as value FROM dbo.oe_hdr h WITH (NOLOCK) JOIN dbo.oe_line l WITH (NOLOCK) ON h.order_no = l.order_no WHERE h.location_id = '101' AND h.order_date >= DATEADD(day, -30, GETDATE())`,
        tableName: "oe_hdr, oe_line",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '70',
        name: "Site Distribution - Columbus Inventory",
        chartName: "Site Distribution",
        variableName: "Columbus Inventory",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(qty_on_hand)",
        sqlExpression: `SELECT SUM(quantity) as value FROM inventory WHERE site = 'Columbus'`,
        sqlExpression: `SELECT ISNULL(SUM(qty_on_hand), 0) as value FROM dbo.inv_loc WITH (NOLOCK) WHERE location_id = '101'`,
        tableName: "inv_loc",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '71',
        name: "Site Distribution - Addison Orders",
        chartName: "Site Distribution",
        variableName: "Addison Orders",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE site = 'Addison'`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE location_id = '100' AND completed = 'N'`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '72',
        name: "Site Distribution - Addison Sales",
        chartName: "Site Distribution",
        variableName: "Addison Sales",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(extended_price)",
        sqlExpression: `SELECT SUM(total) as value FROM orders WHERE site = 'Addison' AND created_at >= DATE_SUB(NOW(), INTERVAL 30 DAY)`,
        sqlExpression: `SELECT ISNULL(SUM(l.extended_price), 0) as value FROM dbo.oe_hdr h WITH (NOLOCK) JOIN dbo.oe_line l WITH (NOLOCK) ON h.order_no = l.order_no WHERE h.location_id = '100' AND h.order_date >= DATEADD(day, -30, GETDATE())`,
        tableName: "oe_hdr, oe_line",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '73',
        name: "Site Distribution - Addison Inventory",
        chartName: "Site Distribution",
        variableName: "Addison Inventory",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(qty_on_hand)",
        sqlExpression: `SELECT SUM(quantity) as value FROM inventory WHERE site = 'Addison'`,
        sqlExpression: `SELECT ISNULL(SUM(qty_on_hand), 0) as value FROM dbo.inv_loc WITH (NOLOCK) WHERE location_id = '100'`,
        tableName: "inv_loc",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '74',
        name: "Site Distribution - Lake City Orders",
        chartName: "Site Distribution",
        variableName: "Lake City Orders",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE site = 'Lake City'`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE location_id = '107' AND completed = 'N'`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '75',
        name: "Site Distribution - Lake City Sales",
        chartName: "Site Distribution",
        variableName: "Lake City Sales",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(extended_price)",
        sqlExpression: `SELECT SUM(total) as value FROM orders WHERE site = 'Lake City' AND created_at >= DATE_SUB(NOW(), INTERVAL 30 DAY)`,
        sqlExpression: `SELECT ISNULL(SUM(l.extended_price), 0) as value FROM dbo.oe_hdr h WITH (NOLOCK) JOIN dbo.oe_line l WITH (NOLOCK) ON h.order_no = l.order_no WHERE h.location_id = '107' AND h.order_date >= DATEADD(day, -30, GETDATE())`,
        tableName: "oe_hdr, oe_line",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '76',
        name: "Site Distribution - Lake City Inventory",
        chartName: "Site Distribution",
        variableName: "Lake City Inventory",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(qty_on_hand)",
        sqlExpression: `SELECT SUM(quantity) as value FROM inventory WHERE site = 'Lake City'`,
        sqlExpression: `SELECT ISNULL(SUM(qty_on_hand), 0) as value FROM dbo.inv_loc WITH (NOLOCK) WHERE location_id = '107'`,
        tableName: "inv_loc",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '77',
        name: "AR Aging - Current",
        chartName: "AR Aging",
        variableName: "Current",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT SUM(amount) as value FROM invoices WHERE status = 'open' AND due_date >= CURDATE()`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE due_date >= GETDATE()`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '78',
        name: "AR Aging - 1-30 Days",
        chartName: "AR Aging",
        variableName: "1-30 Days",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT SUM(amount) as value FROM invoices WHERE status = 'open' AND due_date < CURDATE() AND due_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE due_date < GETDATE() AND due_date >= DATEADD(day, -30, GETDATE())`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '79',
        name: "AR Aging - 31-60 Days",
        chartName: "AR Aging",
        variableName: "31-60 Days",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT SUM(amount) as value FROM invoices WHERE status = 'open' AND due_date < DATE_SUB(CURDATE(), INTERVAL 30 DAY) AND due_date >= DATE_SUB(CURDATE(), INTERVAL 60 DAY)`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE due_date < DATEADD(day, -30, GETDATE()) AND due_date >= DATEADD(day, -60, GETDATE())`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '80',
        name: "AR Aging - 61-90 Days",
        chartName: "AR Aging",
        variableName: "61-90 Days",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT SUM(amount) as value FROM invoices WHERE status = 'open' AND due_date < DATE_SUB(CURDATE(), INTERVAL 60 DAY) AND due_date >= DATE_SUB(CURDATE(), INTERVAL 90 DAY)`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE due_date < DATEADD(day, -60, GETDATE()) AND due_date >= DATEADD(day, -90, GETDATE())`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '81',
        name: "AR Aging - 90+ Days",
        chartName: "AR Aging",
        variableName: "90+ Days",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(open_balance)",
        sqlExpression: `SELECT SUM(amount) as value FROM invoices WHERE status = 'open' AND due_date < DATE_SUB(CURDATE(), INTERVAL 90 DAY)`,
        sqlExpression: `SELECT ISNULL(SUM(open_balance), 0) as value FROM dbo.ar_open_items WITH (NOLOCK) WHERE due_date < DATEADD(day, -90, GETDATE())`,
        tableName: "ar_open_items",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '82',
        name: "Inventory - Active Items",
        chartName: "Inventory",
        variableName: "Active Items",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM inventory WHERE status = 'active'`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.inv_mast WITH (NOLOCK) WHERE delete_flag <> 'Y'`,
        tableName: "inv_mast",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '83',
        name: "Inventory - Inactive Items",
        chartName: "Inventory",
        variableName: "Inactive Items",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM inventory WHERE status = 'inactive'`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.inv_mast WITH (NOLOCK) WHERE delete_flag = 'Y'`,
        tableName: "inv_mast",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '84',
        name: "Inventory - Total Items",
        chartName: "Inventory",
        variableName: "Total Items",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM inventory`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.inv_mast WITH (NOLOCK)`,
        tableName: "inv_mast",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '85',
        name: "Inventory - In Stock Value",
        chartName: "Inventory",
        variableName: "In Stock Value",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(qty_on_hand * avg_cost)",
        sqlExpression: `SELECT SUM(quantity * cost) as value FROM inventory WHERE status = 'active'`,
        sqlExpression: `SELECT ISNULL(SUM(i.qty_on_hand * i.avg_cost), 0) as value FROM dbo.inv_mast i WITH (NOLOCK) JOIN dbo.inv_loc l WITH (NOLOCK) ON i.inv_mast_uid = l.inv_mast_uid WHERE i.delete_flag <> 'Y'`,
        tableName: "inv_mast, inv_loc",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '86',
        name: "Inventory - On Order Value",
        chartName: "Inventory",
        variableName: "On Order Value",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(qty_on_order * avg_cost)",
        sqlExpression: `SELECT SUM(on_order * cost) as value FROM inventory WHERE status = 'active'`,
        sqlExpression: `SELECT ISNULL(SUM(i.qty_on_order * i.avg_cost), 0) as value FROM dbo.inv_mast i WITH (NOLOCK) WHERE i.delete_flag <> 'Y'`,
        tableName: "inv_mast",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '87',
        name: "Inventory - Turnover Rate",
        chartName: "Inventory",
        variableName: "Turnover Rate",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "CUSTOM",
        sqlExpression: `SELECT 4.5 as value`,
        sqlExpression: `SELECT CAST(ISNULL(SUM(l.qty_shipped * i.avg_cost), 0) / NULLIF(ISNULL(SUM(i.qty_on_hand * i.avg_cost), 0), 0) as float) as value FROM dbo.inv_mast i WITH (NOLOCK) JOIN dbo.inv_loc l WITH (NOLOCK) ON i.inv_mast_uid = l.inv_mast_uid JOIN dbo.oe_line ol WITH (NOLOCK) ON i.inv_mast_uid = ol.inv_mast_uid WHERE i.delete_flag <> 'Y' AND ol.order_date > DATEADD(month, -12, GETDATE())`,
        tableName: "inv_mast, inv_loc, oe_line",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '88',
        name: "Daily Orders - Orders",
        chartName: "Daily Orders",
        variableName: "Orders",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE DATE(created_at) = CURDATE()`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE CONVERT(date, order_date) = CONVERT(date, GETDATE())`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '89',
        name: "Daily Orders - Orders",
        chartName: "Daily Orders",
        variableName: "Orders",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE DATE(created_at) = DATE_SUB(CURDATE(), INTERVAL 1 DAY)`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE CONVERT(date, order_date) = CONVERT(date, DATEADD(day, -1, GETDATE()))`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '90',
        name: "Daily Orders - Orders",
        chartName: "Daily Orders",
        variableName: "Orders",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE DATE(created_at) = DATE_SUB(CURDATE(), INTERVAL 2 DAY)`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE CONVERT(date, order_date) = CONVERT(date, DATEADD(day, -2, GETDATE()))`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '91',
        name: "Daily Orders - Orders",
        chartName: "Daily Orders",
        variableName: "Orders",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE DATE(created_at) = DATE_SUB(CURDATE(), INTERVAL 3 DAY)`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE CONVERT(date, order_date) = CONVERT(date, DATEADD(day, -3, GETDATE()))`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '92',
        name: "Daily Orders - Orders",
        chartName: "Daily Orders",
        variableName: "Orders",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE DATE(created_at) = DATE_SUB(CURDATE(), INTERVAL 4 DAY)`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE CONVERT(date, order_date) = CONVERT(date, DATEADD(day, -4, GETDATE()))`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '93',
        name: "Daily Orders - Orders",
        chartName: "Daily Orders",
        variableName: "Orders",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE DATE(created_at) = DATE_SUB(CURDATE(), INTERVAL 5 DAY)`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE CONVERT(date, order_date) = CONVERT(date, DATEADD(day, -5, GETDATE()))`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '94',
        name: "Daily Orders - Orders",
        chartName: "Daily Orders",
        variableName: "Orders",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE DATE(created_at) = DATE_SUB(CURDATE(), INTERVAL 6 DAY)`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE CONVERT(date, order_date) = CONVERT(date, DATEADD(day, -6, GETDATE()))`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '95',
        name: "Web Orders - Orders",
        chartName: "Web Orders",
        variableName: "Orders",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE source = 'web' AND created_at >= DATE_FORMAT(NOW(), '%Y-%m-01') AND created_at < DATE_ADD(DATE_FORMAT(NOW(), '%Y-%m-01'), INTERVAL 1 MONTH)`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE web_order_flag = 'Y' AND YEAR(order_date) = YEAR(GETDATE()) AND MONTH(order_date) = MONTH(GETDATE())`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '96',
        name: "Web Orders - Revenue",
        chartName: "Web Orders",
        variableName: "Revenue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(extended_price)",
        sqlExpression: `SELECT SUM(total) as value FROM orders WHERE source = 'web' AND created_at >= DATE_FORMAT(NOW(), '%Y-%m-01') AND created_at < DATE_ADD(DATE_FORMAT(NOW(), '%Y-%m-01'), INTERVAL 1 MONTH)`,
        sqlExpression: `SELECT ISNULL(SUM(l.extended_price), 0) as value FROM dbo.oe_hdr h WITH (NOLOCK) JOIN dbo.oe_line l WITH (NOLOCK) ON h.order_no = l.order_no WHERE h.web_order_flag = 'Y' AND YEAR(h.order_date) = YEAR(GETDATE()) AND MONTH(h.order_date) = MONTH(GETDATE())`,
        tableName: "oe_hdr, oe_line",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '97',
        name: "Web Orders - Orders",
        chartName: "Web Orders",
        variableName: "Orders",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE source = 'web' AND created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(NOW(), '%Y-%m-01')`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE web_order_flag = 'Y' AND YEAR(order_date) = YEAR(DATEADD(month, -1, GETDATE())) AND MONTH(order_date) = MONTH(DATEADD(month, -1, GETDATE()))`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '98',
        name: "Web Orders - Revenue",
        chartName: "Web Orders",
        variableName: "Revenue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(extended_price)",
        sqlExpression: `SELECT SUM(total) as value FROM orders WHERE source = 'web' AND created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(NOW(), '%Y-%m-01')`,
        sqlExpression: `SELECT ISNULL(SUM(l.extended_price), 0) as value FROM dbo.oe_hdr h WITH (NOLOCK) JOIN dbo.oe_line l WITH (NOLOCK) ON h.order_no = l.order_no WHERE h.web_order_flag = 'Y' AND YEAR(h.order_date) = YEAR(DATEADD(month, -1, GETDATE())) AND MONTH(h.order_date) = MONTH(DATEADD(month, -1, GETDATE()))`,
        tableName: "oe_hdr, oe_line",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '99',
        name: "Web Orders - Orders",
        chartName: "Web Orders",
        variableName: "Orders",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "COUNT(*)",
        sqlExpression: `SELECT COUNT(*) as value FROM orders WHERE source = 'web' AND created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 2 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH), '%Y-%m-01')`,
        sqlExpression: `SELECT COUNT(*) as value FROM dbo.oe_hdr WITH (NOLOCK) WHERE web_order_flag = 'Y' AND YEAR(order_date) = YEAR(DATEADD(month, -2, GETDATE())) AND MONTH(order_date) = MONTH(DATEADD(month, -2, GETDATE()))`,
        tableName: "oe_hdr",
        lastUpdated: "2025-03-21 13:26:10"
    },
    {
        id: '100',
        name: "Web Orders - Revenue",
        chartName: "Web Orders",
        variableName: "Revenue",
        serverName: 'P21',
        value: "0",
        chartGroup: "Metrics",
        calculation: "SUM(extended_price)",
        sqlExpression: `SELECT SUM(total) as value FROM orders WHERE source = 'web' AND created_at >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 2 MONTH), '%Y-%m-01') AND created_at < DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH), '%Y-%m-01')`,
        sqlExpression: `SELECT ISNULL(SUM(l.extended_price), 0) as value FROM dbo.oe_hdr h WITH (NOLOCK) JOIN dbo.oe_line l WITH (NOLOCK) ON h.order_no = l.order_no WHERE h.web_order_flag = 'Y' AND YEAR(h.order_date) = YEAR(DATEADD(month, -2, GETDATE())) AND MONTH(h.order_date) = MONTH(DATEADD(month, -2, GETDATE()))`,
        tableName: "oe_hdr, oe_line",
        lastUpdated: "2025-03-21 13:26:10"
    },
];
// Export the combined data
export const combinedData = [...initialSpreadsheetData];
